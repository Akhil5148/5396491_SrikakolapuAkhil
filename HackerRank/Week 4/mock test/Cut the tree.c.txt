#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#define MAXN 100001

typedef long long ll;

int *adj[MAXN], deg[MAXN];
ll data[MAXN], subtree[MAXN], total, res = LLONG_MAX;
int n;

void dfs(int u, int par) {
    subtree[u] = data[u];
    for (int i = 0; i < deg[u]; i++) {
        int v = adj[u][i];
        if (v != par) {
            dfs(v, u);
            subtree[u] += subtree[v];
        }
    }
    if (u != 1) {
        ll diff = llabs(total - 2 * subtree[u]);
        if (diff < res) res = diff;
    }
}

int main() {
    scanf("%d", &n);
    for (int i = 1; i <= n; i++) {
        scanf("%lld", &data[i]);
        total += data[i];
        deg[i] = 0;
    }
    for (int i = 1; i <= n; i++)
        adj[i] = malloc(sizeof(int) * (n > 2 ? 2 : 1));
    for (int i = 1; i < n; i++) {
        int u, v;
        scanf("%d %d", &u, &v);
        adj[u][deg[u]++] = v;
        adj[v][deg[v]++] = u;
    }
    dfs(1, 0);
    printf("%lld\n", res);
    for (int i = 1; i <= n; i++) free(adj[i]);
    return 0;
}