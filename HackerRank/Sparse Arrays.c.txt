#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_STR_LEN 100

typedef struct Node {
    char str[MAX_STR_LEN];
    int count;
    struct Node* next;
} Node;

Node* find(Node* head, char* s) {
    Node* curr = head;
    while (curr != NULL) {
        if (strcmp(curr->str, s) == 0) {
            return curr;
        }
        curr = curr->next;
    }
    return NULL;
}

void addOrUpdate(Node** head, char* s) {
    Node* found = find(*head, s);
    if (found != NULL) {
        found->count++;
    } else {
        Node* newNode = (Node*)malloc(sizeof(Node));
        strcpy(newNode->str, s);
        newNode->count = 1;
        newNode->next = *head;
        *head = newNode;
    }
}

void freeList(Node* head) {
    while (head != NULL) {
        Node* tmp = head;
        head = head->next;
        free(tmp);
    }
}

int main() {
    int n, q;
    scanf("%d", &n);
    Node* head = NULL;
    char buffer[MAX_STR_LEN];
    for (int i = 0; i < n; i++) {
        scanf("%s", buffer);
        addOrUpdate(&head, buffer);
    }
    scanf("%d", &q);
    for (int i = 0; i < q; i++) {
        scanf("%s", buffer);
        Node* found = find(head, buffer);
        if (found != NULL) {
            printf("%d\n", found->count);
        } else {
            printf("0\n");
        }
    }
    freeList(head);
    return 0;
}
gi
